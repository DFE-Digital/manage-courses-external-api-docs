---
title: API Reference

language_tabs: # must be one of https://git.io/vQNgJ
  - shell

toc_footers:
  - <a href='https://github.com/lord/slate'>Documentation Powered by Slate</a>

search: true
---

# Introduction

# Authorisation

The server expects an API key to be included in a header  for all API requests:

`Authorization: Bearer your_api_key`

<aside class="notice">
You must replace <code>your_api_key</code> with your issued API key.
</aside>


> To authorise, use this code:

```shell
# With shell, you can just pass the correct header with each request
curl "api_endpoint_here"
  -H "Authorization: Bearer your_api_key"
```

# Pagination

All endpoints return paginated results, meaning if there are more results than the page size, multiple requests will be necessary to retrieve all the results.

> Example page URLs:

```
<%= config[:base_api_url] %>/courses
<%= config[:base_api_url] %>/courses?page=1
<%= config[:base_api_url] %>/courses?page=2
<%= config[:base_api_url] %>/courses?page=3
```

The API responses contain meta-information in the `Link`, `Per-Page` and `Total` headers:

Header | Description | Example
------ | ----------- | -------
Link   | Links to the next and last pages | `Link: <<%= config[:base_api_url] %>/courses?page=169>; rel="last", <<%= config[:base_api_url] %>/courses?page=2>; rel="next"`
Per-Page | The number of results in the page | `Per-Page: 100`
Total | The total number of results | `Total: 16888`

# Errors

The API uses the following error codes:

Error Code | Meaning
---------- | -------
400 | Bad Request -- Your request is invalid.
401 | Unauthorized -- Your API key is wrong.
404 | Not Found -- The specified resource could not be found.
500 | Internal Server Error -- We had a problem with our server. Try again later.
503 | Service Unavailable -- We're temporarily offline for maintenance. Please try again later.

# Endpoints

## Courses

### Entity documentation

Parameter | Data type | Possible values | Description
--------- | --------- | --------------- | -----------
course_code | Text | 4-character strings | 4-character course code
course_month | ISO 8601 date/time string | | The month and year when the course starts
name | Text | | Course title
copy_form_required | Text | 'Y' or 'N' |
profpost_flag | Text | "", "PF", "PG", "BO" | Maximum of 2-characters
program_type | Text | "SC", "SS", "TA", "SD", "HE" | Maximum of 2-characters
modular | Text | "", "M" | Maximum of 1-character
english | Integer | 1, 2, 3, 9 |
maths | Integer | 1, 2, 3, 9 |
science | Integer | 1, 2, 3, 9, null |
has_been_published | Boolean | true, false |
campuses | An array of campuses | | See the campus entity documentation below
subjects | An array of subjects | | See the subject entity documentation below
provider | Provider | null or a provider entity | See the provider entity documentation below
accrediting_provider | Provider | null or a provider entity | See the provider entity documentation below

### Get all courses

```shell
curl "<%= config[:base_api_url] %>/courses"
  -H "Authorization: Bearer your_api_key"
```

> The above command returns JSON structured like this:

```json
[
  {
    "course_code": "36B3",
    "course_month": "2019-09-01T00:00:00.000Z",
    "name": "Mathematics",
    "study_mode": "F",
    "copy_form_required": "Y",
    "profpost_flag": "PG",
    "program_type": "SD",
    "modular": "M",
    "english": 1,
    "maths": 3,
    "science": null,
    "has_been_published": true,
    "campuses": [
      {
        "campus_code": "-",
        "name": "Main Site",
        "vac_status": "F",
        "publish": "Y",
        "status": "R",
        "course_open_date": "2018-10-09 00:00:00"
      }
    ],
    "subjects": [
      {
        "subject_name": "Secondary",
        "subject_code": "05"
      },
      {
        "subject_name": "Mathematics",
        "subject_code": "G1"
      }
    ],
    "provider": {
      "institution_code": "2G9",
      "institution_name": "Outwood Institute of Education North",
      "institution_type": "Y",
      "accrediting_provider": "Y"
    },
    "accrediting_provider": {
      "institution_code": "D86",
      "institution_name": "Durham University",
      "institution_type": "Y",
      "accrediting_provider": "Y"
    }
  },
  {
    ...
  }
]
```

This endpoint retrieves all courses.

#### HTTP Request

`GET <%= config[:base_api_url] %>/courses`

## Campus

TODO

## Subject

TODO

## Provider

TODO
